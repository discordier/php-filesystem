<?php

/**
 * High level object oriented filesystem abstraction.
 *
 * @package filicious-core
 * @author  Tristan Lins <tristan.lins@bit3.de>
 * @author  Christian Schiffler <c.schiffler@cyberspectrum.de>
 * @author  Oliver Hoff <oliver@hofff.com>
 * @link    http://filicious.org
 * @license http://www.gnu.org/licenses/lgpl-3.0.html LGPL
 */

namespace Filicious\Test\Local;

use Filicious\FilesystemConfig;
use Filicious\Test\AbstractFilesystemConfigurationTest;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-10-17 at 10:24:36.
 */
class LocalFilesystemConfigurationTest
	extends AbstractFilesystemConfigurationTest
{
	protected function getAdapterClassName()
	{
		return 'Filicious\Local\LocalAdapter';
	}

	/**
	 * Return a set of configuration parameters, after empty initialisation.
	 *
	 * @return array
	 */
	protected function getBlankConfigurationValues()
	{
		return array(
			'global' => array(
				FilesystemConfig::IMPLEMENTATION => 'Filicious\Local\LocalAdapter',
				FilesystemConfig::BASEPATH       => null
			)
		);
	}

	/**
	 * Return a set of object properties, after empty initialisation.
	 *
	 * @return array
	 */
	protected function getBlankObjectPropertyValues()
	{
		return array(
			'basepath' => null
		);
	}

	/**
	 * Set of constructor parameters.
	 *
	 * @var array
	 */
	protected function getConstructorArgumentValues()
	{
		return array(
			'/given/path/to/basepath'
		);
	}

	/**
	 * Set of configuration parameters, after initialisation with $constructorArguments.
	 *
	 * @var array
	 */
	protected function getConstructorConfigurationValues()
	{
		return array(
			'global' => array(
				FilesystemConfig::IMPLEMENTATION => 'Filicious\Local\LocalAdapter',
				FilesystemConfig::BASEPATH       => '/given/path/to/basepath'
			)
		);
	}

	/**
	 * Set of object properties, after empty initialisation.
	 *
	 * @var array
	 */
	protected function getConstructorObjectPropertyValues()
	{
		return array(
			'basepath' => '/given/path/to/basepath'
		);
	}

	/**
	 * Set of configuration parameters, for preconfigurated initialisation.
	 *
	 * @var array
	 */
	protected function getInitialSetupValues()
	{
		return array(
			'global' => array(
				FilesystemConfig::BASEPATH => '/configured/path/to/basepath'
			)
		);
	}

	/**
	 * Set of configuration parameters, after preconfigurated initialisation.
	 *
	 * @var array
	 */
	protected function getInitialConfigurationValues()
	{
		return array(
			'global' => array(
				FilesystemConfig::IMPLEMENTATION => 'Filicious\Local\LocalAdapter',
				FilesystemConfig::BASEPATH       => '/configured/path/to/basepath'
			)
		);
	}

	/**
	 * Set of object properties, after preconfigurated initialisation.
	 *
	 * @var array
	 */
	protected function getInitialObjectPropertyValues()
	{
		return array(
			'basepath' => '/configured/path/to/basepath'
		);
	}

	/**
	 * Set of configuration parameters, for live reconfiguration.
	 *
	 * @var array
	 */
	protected function getUpdateSetupValues()
	{
		return array(
			'global' => array(
				FilesystemConfig::BASEPATH => '/updated/path/to/basepath'
			)
		);
	}

	/**
	 * Set of configuration parameters, after live reconfiguration.
	 *
	 * @var array
	 */
	protected function getUpdateConfigurationValues()
	{
		return array(
			'global' => array(
				FilesystemConfig::IMPLEMENTATION => 'Filicious\Local\LocalAdapter',
				FilesystemConfig::BASEPATH       => '/updated/path/to/basepath'
			)
		);
	}

	/**
	 * Set of object properties, after live reconfiguration.
	 *
	 * @var array
	 */
	protected function getUpdatePropertyValues()
	{
		return array(
			'basepath' => '/updated/path/to/basepath'
		);
	}
}
